{"version":3,"sources":["components/DynamicForm/TypeIdentification/TypeInfo.js","components/DynamicForm/TypeIdentification/isDate.js","components/DynamicForm/TypeIdentification/isFloat.js","components/DynamicForm/TypeIdentification/isInt.js","components/DynamicForm/TypeIdentification/isBool.js","components/DynamicForm/TypeIdentification/isString.js","components/DynamicForm/TypeIdentification/index.js","components/DynamicForm/Form.js","components/DynamicForm/index.js","components/DropZone.js","App.js","index.js"],"names":["TypeInfo","type","hint","control","properties","onChange","event","handler","target","value","this","isDate","isNaN","Date","parse","cohersed_value","toISOString","slice","isFloat","parseFloat","decimals","n","match","exec","Math","max","length","decimalPlaces","step","repeat","isInt","parseInt","toString","isBool","toLowerCase","defaultChecked","isString","coerced_value","TypeIdentification","Field","styled","div","FieldSet","fieldset","buildControls","name","map","item","index","handleChange","prop_name","new_value","Object","entries","key","type_info","TagName","label","htmlFor","id","buildControl","Form","form","data","Drop","DropZone","children","onDragOver","stopPropagation","preventDefault","dataTransfer","dropEffect","onDrop","file","files","console","log","SideBySide","section","Pre","pre","App","useState","state","setState","File","setFile","href","JSON","stringify","reader","FileReader","onload","result","readAsText","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5104f9e.chunk.js","sourcesContent":["class TypeInfo {\n  constructor({ type = 'string', hint, control = 'input', properties = {}, onChange = ( event, handler ) => handler(event.target.value) }) {\n    this.type = type;\n    this.hint = hint;\n    this.control = control;\n    this.properties = properties;\n    this.onChange = onChange;\n  }\n}\n\nexport default TypeInfo\n","import TypeInfo from './TypeInfo'\n\nconst isDate = ( value ) => {\n  if( typeof value !== 'string' || ( isNaN(Date.parse( value )) || new Date( value ) === 'Invalid Date' )){\n    return\n  }\n\n  const cohersed_value = new Date( value ).toISOString().slice(0,-8)\n\n  return new TypeInfo({\n    type: 'date',\n    control: 'input',\n    hint: 'converted to UTZ',\n    properties: { type: 'datetime-local', value: cohersed_value }\n  });\n}\n\nexport default isDate;\n","import TypeInfo from './TypeInfo'\n\n// https://stackoverflow.com/a/9539746\nconst decimalPlaces = ( n ) => {\n  // Make sure it is a number and use the builtin number -> string.\n  var s = \"\" + (+n);\n  // Pull out the fraction and the exponent.\n  var match = /(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/.exec(s);\n  // NaN or Infinity or integer.\n  // We arbitrarily decide that Infinity is integral.\n  if (!match) { return 0; }\n  // Count the number of digits in the fraction and subtract the\n  // exponent to simulate moving the decimal point left by exponent places.\n  // 1.234e+2 has 1 fraction digit and '234'.length -  2 == 1\n  // 1.234e-2 has 5 fraction digit and '234'.length - -2 == 5\n  return Math.max(\n      0,  // lower limit.\n      (match[1] === '0' ? 0 : (match[1] || '').length)  // fraction length\n      - (match[2] || 0));  // exponent\n}\n\nconst isFloat = ( value ) => {\n  if( !isNaN( value ) && !isNaN( parseFloat( value ))){\n    const decimals = decimalPlaces( value );\n    const step = '0.' + '0'.repeat( Math.max(decimals -1, 0)) + '1';\n\n    return new TypeInfo({\n      type: 'float',\n      control: 'input',\n      properties: { type: 'number', step, value }\n    })\n  }\n}\n\nexport default isFloat;\n","import TypeInfo from './TypeInfo'\n\nconst isInt = ( value ) => {\n  if( parseInt( value ).toString() === value.toString() ){\n    return new TypeInfo({\n      type: 'integer',\n      control: 'input',\n      properties: { type: 'number', value }\n    })\n  }\n}\n\nexport default isInt;\n","import TypeInfo from './TypeInfo'\n\nconst isBool = ( value ) => {\n  if( value !== true && value !== false && value.toString().toLowerCase() !== 'true' && value.toString().toLowerCase() !== 'false' ){\n    return\n  }\n\n  const cohersed_value = value || value.toString().toLowerCase() === 'true'\n\n  return new TypeInfo({\n    type: 'boolean',\n    control: 'input',\n    properties: { type: 'checkbox', defaultChecked: cohersed_value },\n    onChange: ( event, handler ) => handler( !value )\n  })\n}\n\nexport default isBool;\n","import TypeInfo from './TypeInfo'\n\nconst isString = ( value ) => {\n  const coerced_value = value.toString();\n\n  return new TypeInfo({\n    type: 'string',\n    control: 'input',\n    properties:{\n      type: 'text',\n      value: coerced_value\n    }\n  })\n}\n\nexport default isString\n","import isDate from './isDate';\nimport isFloat from './isFloat';\nimport isInt from './isInt';\nimport isBool from './isBool';\nimport isString from './isString';\n\nconst TypeIdentification = ( value ) => {\n  return isInt( value ) ||\n         isFloat( value ) ||\n         isBool( value ) ||\n         isDate( value ) ||\n         isString( value )\n}\n\nexport default TypeIdentification\n","import React from 'react';\nimport styled from 'styled-components'\n\nimport TypeIdentification from './TypeIdentification'\n\nconst Field = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 300px;\n  & > label {\n    text-align: right;\n    padding-right: 1em;\n  }\n  margin: .5em 0;\n`;\n\nconst buildControl = ( name, value, onChange ) => {\n  const type_info = TypeIdentification( value );\n\n  const TagName = type_info.control\n  const label = type_info.hint ? `${ name } (${type_info.hint})` : name\n\n  return (\n    <Field key={ name }>\n      <label htmlFor={ name }>{ label }</label>\n      <TagName\n        id={ name }\n        { ...type_info.properties }\n        onChange={ ( event ) => type_info.onChange( event, onChange ) }\n      />\n    </Field>\n  )\n}\n\nconst FieldSet = styled.fieldset`\n  box-sizing: border-box;\n  display: block;\n  width: auto;\n  border: none;\n  border-left: 1px solid lightgray;\n  border-top: 1px solid lightgray;\n  padding-right: 0;\n  border-top-left-radius: 4px;\n  & > legend {\n    color: gray;\n  }\n`;\n\nconst buildControls = ( name, value, onChange ) => {\n  switch (typeof value) {\n    case 'array':\n      return (\n        <FieldSet key={ name || 'root' }>\n          { name && (<legend>{ name }</legend>) }\n          { value.map((item, index) => buildControls( `[${index}]`, item )) }\n        </FieldSet>\n      )\n    case 'object':\n      const handleChange = ( prop_name, new_value ) => {\n        onChange({\n          ...value,\n          [ prop_name ]: new_value\n        })\n      }\n      return (\n        <FieldSet key={ name || 'root' }>\n          { name && (<legend>{ name }</legend>) }\n          { Object.entries( value ).map(([key, item]) => buildControls( key, item, ( value ) => handleChange( key, value ) )) }\n        </FieldSet>\n      )\n    case 'undefined':\n      return null\n    default:\n      return buildControl( name, value, onChange )\n  }\n}\n\nconst Form = styled.form`\n  width: 600px;\n`;\n\nconst FormComponent = ({ name, data, onChange }) => {\n  return (\n    <Form>\n      { buildControls( name, data, onChange ) }\n    </Form>\n  )\n}\n\nexport default FormComponent;\n","import Form from './Form'\nexport default Form\n","import React from 'react'\nimport styled from 'styled-components'\n\n\nconst Drop = styled.div`\n  display: grid;\n  margin: 2em;\n  border: 1px dashed lightgrey;\n  align-items: center;\n  justify-content: center;\n  height: 100px;\n  border-radius: 5px;\n`;\n\nconst DropZone = ({ children, onChange }) => {\n\n  const handleDrop = ( event ) => {\n    event.stopPropagation();\n    event.preventDefault();\n\n    const file = event.dataTransfer.files[0];\n    if( file ){\n      onChange( file )\n    } else {\n      console.log( event.dataTransfer )\n    }\n  }\n\n  const handleDragOver = ( event ) => {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n\n  return(\n    <Drop onDragOver={ handleDragOver } onDrop={ handleDrop }>{children}</Drop>\n  )\n}\n\nexport default DropZone\n","import React, { useState } from 'react';\nimport styled from 'styled-components'\n\nimport Form from 'components/DynamicForm'\nimport DropZone from 'components/DropZone'\n\n\nconst SideBySide = styled.section`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`\n\nconst Pre = styled.pre`\n  background: lightgray;\n  padding: 1em 1.5em;\n  border-radius: 4px;\n  font-family: 'Source Code Pro', monospace;\n`;\n\nfunction App() {\n  const [ state, setState ] = useState({})\n  const [ file, setFile ] = useState( new File([], '') )\n\n  const handleDrop = ( file ) => {\n    const reader = new FileReader();\n    reader.onload = (event) => {\n      setFile( file )\n      setState( JSON.parse( event.target.result ))\n    };\n    reader.readAsText(file);\n  }\n\n  return (\n    <main>\n      <a href=\"test_data.json\">Download test data</a>\n      <SideBySide>\n      <Form name={ file.name } data={ state } onChange={ setState } />\n      <Pre>{ JSON.stringify( state, null, 2 ) }</Pre>\n      </SideBySide>\n      <DropZone onChange={handleDrop}>Drop a JSON file here</DropZone>\n    </main>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}